const validator = require('../../helpers/validator')
const { guid, hashify } = require('../../utils')
const schema = require('./<%= config.name %>.schema')
const persistence = require('./<%= config.name %>.persistence')

const list = async (filter) => {
  return await persistence.list(filter || {})
}

const getById = async (id) => {
  return await persistence.get({ id: id })
}

const create = async ({ name }) => {
  const <%= config.name %> = {
    id: guid(),
    name: name
  }

  validator
    .validate(<%= config.name %>)
    .for(schema);

  return await persistence.insert(<%= config.name %>)
}

const update = async (id, { name }) => {
  const <%= config.name %> = await getById(id);
  
  if(!<%= config.name %>)
    throw new Error('NÃ£o encontrado.')

  <%= config.name %>.name = name;

  validator
    .validate(<%= config.name %>)
    .for(schema);

  await persistence.update(id, <%= config.name %>);
}

const remove = async (id) => {
  await persistence.remove(id)
}

module.exports = {
  list,
  getById,
  create,
  update,
  remove,
}
